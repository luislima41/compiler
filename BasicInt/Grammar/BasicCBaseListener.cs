//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/marciohenrique/Downloads/uenp/TF_Compiladores-main/BasicC.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


  namespace BasicInt.Grammar;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IBasicCListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class BasicCBaseListener : IBasicCListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] BasicCParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] BasicCParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>includeDirective</c>
	/// labeled alternative in <see cref="BasicCParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludeDirective([NotNull] BasicCParser.IncludeDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>includeDirective</c>
	/// labeled alternative in <see cref="BasicCParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludeDirective([NotNull] BasicCParser.IncludeDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>defineDirective</c>
	/// labeled alternative in <see cref="BasicCParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefineDirective([NotNull] BasicCParser.DefineDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defineDirective</c>
	/// labeled alternative in <see cref="BasicCParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefineDirective([NotNull] BasicCParser.DefineDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>mainFunctionBlock</c>
	/// labeled alternative in <see cref="BasicCParser.mainFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMainFunctionBlock([NotNull] BasicCParser.MainFunctionBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mainFunctionBlock</c>
	/// labeled alternative in <see cref="BasicCParser.mainFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMainFunctionBlock([NotNull] BasicCParser.MainFunctionBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnWithReturn</c>
	/// labeled alternative in <see cref="BasicCParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnWithReturn([NotNull] BasicCParser.FnWithReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnWithReturn</c>
	/// labeled alternative in <see cref="BasicCParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnWithReturn([NotNull] BasicCParser.FnWithReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnWithoutReturn</c>
	/// labeled alternative in <see cref="BasicCParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnWithoutReturn([NotNull] BasicCParser.FnWithoutReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnWithoutReturn</c>
	/// labeled alternative in <see cref="BasicCParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnWithoutReturn([NotNull] BasicCParser.FnWithoutReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicCParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] BasicCParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicCParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] BasicCParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelExistenteString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelExistenteString([NotNull] BasicCParser.VariavelExistenteStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelExistenteString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelExistenteString([NotNull] BasicCParser.VariavelExistenteStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNovaString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelNovaString([NotNull] BasicCParser.VariavelNovaStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNovaString</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelNovaString([NotNull] BasicCParser.VariavelNovaStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNova</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelNova([NotNull] BasicCParser.VariavelNovaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNova</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelNova([NotNull] BasicCParser.VariavelNovaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNovaFuncao</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelNovaFuncao([NotNull] BasicCParser.VariavelNovaFuncaoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNovaFuncao</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelNovaFuncao([NotNull] BasicCParser.VariavelNovaFuncaoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelNovaBoolean</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelNovaBoolean([NotNull] BasicCParser.VariavelNovaBooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelNovaBoolean</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelNovaBoolean([NotNull] BasicCParser.VariavelNovaBooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelExistente</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelExistente([NotNull] BasicCParser.VariavelExistenteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelExistente</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelExistente([NotNull] BasicCParser.VariavelExistenteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariavelExistenteBoolean</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavelExistenteBoolean([NotNull] BasicCParser.VariavelExistenteBooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariavelExistenteBoolean</c>
	/// labeled alternative in <see cref="BasicCParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavelExistenteBoolean([NotNull] BasicCParser.VariavelExistenteBooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inputVar</c>
	/// labeled alternative in <see cref="BasicCParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputVar([NotNull] BasicCParser.InputVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inputVar</c>
	/// labeled alternative in <see cref="BasicCParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputVar([NotNull] BasicCParser.InputVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inputStr</c>
	/// labeled alternative in <see cref="BasicCParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputStr([NotNull] BasicCParser.InputStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inputStr</c>
	/// labeled alternative in <see cref="BasicCParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputStr([NotNull] BasicCParser.InputStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>outputStr</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputStr([NotNull] BasicCParser.OutputStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>outputStr</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputStr([NotNull] BasicCParser.OutputStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>outputVar</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputVar([NotNull] BasicCParser.OutputVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>outputVar</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputVar([NotNull] BasicCParser.OutputVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>outputExpr</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputExpr([NotNull] BasicCParser.OutputExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>outputExpr</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputExpr([NotNull] BasicCParser.OutputExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>outputStrVar</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputStrVar([NotNull] BasicCParser.OutputStrVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>outputStrVar</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputStrVar([NotNull] BasicCParser.OutputStrVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>outputStrLine</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputStrLine([NotNull] BasicCParser.OutputStrLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>outputStrLine</c>
	/// labeled alternative in <see cref="BasicCParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputStrLine([NotNull] BasicCParser.OutputStrLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>exprSum</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSum([NotNull] BasicCParser.ExprSumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprSum</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSum([NotNull] BasicCParser.ExprSumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>exprSub</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSub([NotNull] BasicCParser.ExprSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprSub</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSub([NotNull] BasicCParser.ExprSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>exprTerm</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprTerm([NotNull] BasicCParser.ExprTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprTerm</c>
	/// labeled alternative in <see cref="BasicCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprTerm([NotNull] BasicCParser.ExprTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termMult</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermMult([NotNull] BasicCParser.TermMultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termMult</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermMult([NotNull] BasicCParser.TermMultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termDiv</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermDiv([NotNull] BasicCParser.TermDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termDiv</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermDiv([NotNull] BasicCParser.TermDivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termMod</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermMod([NotNull] BasicCParser.TermModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termMod</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermMod([NotNull] BasicCParser.TermModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termFactor</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermFactor([NotNull] BasicCParser.TermFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termFactor</c>
	/// labeled alternative in <see cref="BasicCParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermFactor([NotNull] BasicCParser.TermFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factorExpr</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorExpr([NotNull] BasicCParser.FactorExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factorExpr</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorExpr([NotNull] BasicCParser.FactorExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factorVar</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorVar([NotNull] BasicCParser.FactorVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factorVar</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorVar([NotNull] BasicCParser.FactorVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factorNumD</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorNumD([NotNull] BasicCParser.FactorNumDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factorNumD</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorNumD([NotNull] BasicCParser.FactorNumDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factorNum</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorNum([NotNull] BasicCParser.FactorNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factorNum</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorNum([NotNull] BasicCParser.FactorNumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factorStr</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorStr([NotNull] BasicCParser.FactorStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factorStr</c>
	/// labeled alternative in <see cref="BasicCParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorStr([NotNull] BasicCParser.FactorStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifBlock</c>
	/// labeled alternative in <see cref="BasicCParser.controlflow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] BasicCParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifBlock</c>
	/// labeled alternative in <see cref="BasicCParser.controlflow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] BasicCParser.IfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifElseBlock</c>
	/// labeled alternative in <see cref="BasicCParser.controlflow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseBlock([NotNull] BasicCParser.IfElseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifElseBlock</c>
	/// labeled alternative in <see cref="BasicCParser.controlflow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseBlock([NotNull] BasicCParser.IfElseBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>loopBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopBlock([NotNull] BasicCParser.LoopBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopBlock([NotNull] BasicCParser.LoopBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forLoopBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoopBlock([NotNull] BasicCParser.ForLoopBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forLoopBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoopBlock([NotNull] BasicCParser.ForLoopBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>doWhileBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoWhileBlock([NotNull] BasicCParser.DoWhileBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>doWhileBlock</c>
	/// labeled alternative in <see cref="BasicCParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoWhileBlock([NotNull] BasicCParser.DoWhileBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>blockLine</c>
	/// labeled alternative in <see cref="BasicCParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockLine([NotNull] BasicCParser.BlockLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>blockLine</c>
	/// labeled alternative in <see cref="BasicCParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockLine([NotNull] BasicCParser.BlockLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBlockLine</c>
	/// labeled alternative in <see cref="BasicCParser.rblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnBlockLine([NotNull] BasicCParser.FnBlockLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBlockLine</c>
	/// labeled alternative in <see cref="BasicCParser.rblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnBlockLine([NotNull] BasicCParser.FnBlockLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBodyLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnBodyLine([NotNull] BasicCParser.FnBodyLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBodyLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnBodyLine([NotNull] BasicCParser.FnBodyLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnBodyLineMore</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnBodyLineMore([NotNull] BasicCParser.FnBodyLineMoreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnBodyLineMore</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnBodyLineMore([NotNull] BasicCParser.FnBodyLineMoreContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnBoolLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnReturnBoolLine([NotNull] BasicCParser.FnReturnBoolLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnBoolLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnReturnBoolLine([NotNull] BasicCParser.FnReturnBoolLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnStrLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnReturnStrLine([NotNull] BasicCParser.FnReturnStrLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnStrLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnReturnStrLine([NotNull] BasicCParser.FnReturnStrLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnExprLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnReturnExprLine([NotNull] BasicCParser.FnReturnExprLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnExprLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnReturnExprLine([NotNull] BasicCParser.FnReturnExprLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fnReturnLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnReturnLine([NotNull] BasicCParser.FnReturnLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fnReturnLine</c>
	/// labeled alternative in <see cref="BasicCParser.rbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnReturnLine([NotNull] BasicCParser.FnReturnLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bexprNot</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexprNot([NotNull] BasicCParser.BexprNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bexprNot</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexprNot([NotNull] BasicCParser.BexprNotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bexprOr</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexprOr([NotNull] BasicCParser.BexprOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bexprOr</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexprOr([NotNull] BasicCParser.BexprOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bexprExpr</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexprExpr([NotNull] BasicCParser.BexprExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bexprExpr</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexprExpr([NotNull] BasicCParser.BexprExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bexprRelop</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexprRelop([NotNull] BasicCParser.BexprRelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bexprRelop</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexprRelop([NotNull] BasicCParser.BexprRelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bexprAnd</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexprAnd([NotNull] BasicCParser.BexprAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bexprAnd</c>
	/// labeled alternative in <see cref="BasicCParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexprAnd([NotNull] BasicCParser.BexprAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>uniqueParam</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniqueParam([NotNull] BasicCParser.UniqueParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>uniqueParam</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniqueParam([NotNull] BasicCParser.UniqueParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multipleParams</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultipleParams([NotNull] BasicCParser.MultipleParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multipleParams</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultipleParams([NotNull] BasicCParser.MultipleParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>noneParam</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNoneParam([NotNull] BasicCParser.NoneParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>noneParam</c>
	/// labeled alternative in <see cref="BasicCParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNoneParam([NotNull] BasicCParser.NoneParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>uniqueParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniqueParamCall([NotNull] BasicCParser.UniqueParamCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>uniqueParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniqueParamCall([NotNull] BasicCParser.UniqueParamCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multipleParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultipleParamCall([NotNull] BasicCParser.MultipleParamCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multipleParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultipleParamCall([NotNull] BasicCParser.MultipleParamCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>noneParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNoneParamCall([NotNull] BasicCParser.NoneParamCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>noneParamCall</c>
	/// labeled alternative in <see cref="BasicCParser.paramsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNoneParamCall([NotNull] BasicCParser.NoneParamCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcInvoc</c>
	/// labeled alternative in <see cref="BasicCParser.callFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncInvoc([NotNull] BasicCParser.FuncInvocContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcInvoc</c>
	/// labeled alternative in <see cref="BasicCParser.callFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncInvoc([NotNull] BasicCParser.FuncInvocContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
